# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/gemfury/all/gemfury.rbi
#
# gemfury-0.11.0

class Faraday::Adapter < Faraday::Middleware
end
class Faraday::Adapter::FuryHttp < Faraday::Adapter::NetHttp
  def perform_request(http, env); end
end
module Faraday
end
class Faraday::Request::MultipartWithFile < Faraday::Middleware
  def call(env); end
  def mime_type(file); end
end
module Gemfury
  def self.method_missing(method, *args, &block); end
  def self.new(options = nil); end
  def self.respond_to?(method, include_private = nil); end
  extend Gemfury::Configuration
end
module Gemfury::Const
  def self.email_error; end
  def self.email_regex; end
  def self.host; end
  def self.welcome; end
end
class Gemfury::Error < StandardError
end
class Gemfury::InvalidGemVersion < Gemfury::Error
end
class Gemfury::Unauthorized < Gemfury::Error
end
class Gemfury::Forbidden < Gemfury::Error
end
class Gemfury::Conflict < Gemfury::Error
end
class Gemfury::NotFound < Gemfury::Error
end
class Gemfury::CorruptGemFile < Gemfury::Error
end
class Gemfury::DupeVersion < Gemfury::Error
end
class Gemfury::TimeoutError < Gemfury::Error
end
module Gemfury::Platform
  def config_path; end
  def home_directory; end
  def on_mac?; end
  def on_windows?; end
end
module Gemfury::Configuration
  def account; end
  def account=(arg0); end
  def adapter; end
  def adapter=(arg0); end
  def api_version; end
  def api_version=(arg0); end
  def configure; end
  def endpoint; end
  def endpoint=(arg0); end
  def gitpoint; end
  def gitpoint=(arg0); end
  def options; end
  def pushpoint; end
  def pushpoint=(arg0); end
  def reset; end
  def self.extended(base); end
  def user_agent; end
  def user_agent=(arg0); end
  def user_api_key; end
  def user_api_key=(arg0); end
end
class Gemfury::Client
  def account; end
  def account=(arg0); end
  def account_info; end
  def accounts; end
  def adapter; end
  def adapter=(arg0); end
  def add_collaborator(login, options = nil); end
  def api_version; end
  def api_version=(arg0); end
  def checked_response_body(response); end
  def connection(options = nil); end
  def endpoint; end
  def endpoint=(arg0); end
  def escape(str); end
  def get_access_token(*args); end
  def git_rebuild(repo, options = nil); end
  def git_repo_path(*args); end
  def git_repos(options = nil); end
  def git_reset(repo, options = nil); end
  def git_update(repo, options = nil); end
  def gitpoint; end
  def gitpoint=(arg0); end
  def initialize(options = nil); end
  def list(options = nil); end
  def list_collaborators(options = nil); end
  def login(email, password, opts = nil); end
  def logout; end
  def push_gem(file, options = nil); end
  def pushpoint; end
  def pushpoint=(arg0); end
  def remove_collaborator(login, options = nil); end
  def s3_put_file(uri, file); end
  def user_agent; end
  def user_agent=(arg0); end
  def user_api_key; end
  def user_api_key=(arg0); end
  def versions(name, options = nil); end
  def yank_version(name, version, options = nil); end
  include Gemfury::Client::Filters
end
module Gemfury::Client::Filters
  def authenticated?; end
  def ensure_ready!(*args); end
end
class Gemfury::Client::Handle503 < Faraday::Middleware
  def call(env); end
end
class Gemfury::Client::ParseJson < Faraday::Response::Middleware
  def on_complete(response); end
  def parse(body); end
end
class Hash
  def path(path, separator = nil); end
end
