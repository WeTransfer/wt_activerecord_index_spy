# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: true
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/mysql2/all/mysql2.rbi
#
# mysql2-0.5.3

module Mysql2
end
class Mysql2::Error < StandardError
  def clean_message(message); end
  def errno; end
  def error; end
  def error_number; end
  def initialize(msg, server_version = nil, error_number = nil, sql_state = nil); end
  def self.new_with_args(msg, server_version, error_number, sql_state); end
  def sql_state; end
end
class Mysql2::Error::ConnectionError < Mysql2::Error
end
class Mysql2::Error::TimeoutError < Mysql2::Error
end
class Mysql2::Client
  def _query(arg0, arg1); end
  def abandon_results!; end
  def affected_rows; end
  def async_result; end
  def automatic_close=(arg0); end
  def automatic_close?; end
  def charset_name=(arg0); end
  def close; end
  def closed?; end
  def connect(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7); end
  def connect_timeout=(arg0); end
  def default_auth=(arg0); end
  def default_file=(arg0); end
  def default_group=(arg0); end
  def enable_cleartext_plugin=(arg0); end
  def encoding; end
  def escape(arg0); end
  def info; end
  def init_command=(arg0); end
  def initialize(opts = nil); end
  def initialize_ext; end
  def last_id; end
  def local_infile=(arg0); end
  def more_results?; end
  def next_result; end
  def parse_connect_attrs(conn_attrs); end
  def parse_flags_array(flags, initial = nil); end
  def parse_ssl_mode(mode); end
  def ping; end
  def prepare(arg0); end
  def query(sql, options = nil); end
  def query_info; end
  def query_info_string; end
  def query_options; end
  def read_timeout; end
  def read_timeout=(arg0); end
  def reconnect=(arg0); end
  def secure_auth=(arg0); end
  def select_db(arg0); end
  def self.default_query_options; end
  def self.escape(arg0); end
  def self.info; end
  def self.local_offset; end
  def server_info; end
  def set_server_option(arg0); end
  def socket; end
  def ssl_cipher; end
  def ssl_mode=(arg0); end
  def ssl_set(arg0, arg1, arg2, arg3, arg4); end
  def store_result; end
  def thread_id; end
  def warning_count; end
  def write_timeout=(arg0); end
end
class Mysql2::Result
  def count; end
  def each(*arg0); end
  def fields; end
  def free; end
  def server_flags; end
  def size; end
  include Enumerable
end
class Mysql2::Statement
  def _execute(*arg0); end
  def affected_rows; end
  def close; end
  def execute(*args, **kwargs); end
  def field_count; end
  def fields; end
  def last_id; end
  def param_count; end
  include Enumerable
end
class Mysql2::Field < Struct
  def name; end
  def name=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def type; end
  def type=(_); end
end
module Mysql2::Util
  def self.key_hash_as_symbols(hash); end
end
